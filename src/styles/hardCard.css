/* Container that holds the card and provides perspective */
.card-container3 {
  perspective: 1000px;
  margin: 10px;
  width: 120px;
  height: 140px;
}

/* The inner part of the card (responsible for flipping effect) */
.card-inner3 {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

/* Flipping effect when the card is clicked */
.card-inner3.flipped {
  transform: rotateY(180deg);
}

/* Front of the card */
.card-front3,
.card-back3 {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 20px;
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Styling for the front card */
.card-front3 {
  background: #ffcd02;
  z-index: 2;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Image styling for the front of the card */
.card-front3 img {
  width: 90%;
  height: 70%;
  border-radius: 20px;
  border: 2px solid #2654ff;
}

/* Styling for the back card */
.card-back3 {
  background: #2654ff;
  transform: rotateY(180deg);
}

/* Image styling for the back of the card */
.card-back3 img {
  width: 70%;
  height: 90%;
}

/* Styling for the card name */
.name3 {
  font-weight: bold;
  color: #2654ff;
  font-size: 1.2rem;
}

/* Hover effect with dynamic tilt (X and Y axes) */
.card-container3:hover .card-inner3 {
  transform: rotateY(15deg) rotateX(10deg);
  cursor: pointer;
}

/* Additional hover transformations for front and back of the card */
.card-container3:hover .card-front3 {
  transform: rotateY(0deg) scale(1.05);
}

.card-container3:hover .card-back3 {
  transform: rotateY(180deg) scale(1.05);
}

/* Mouse tracking for dynamic tilt */
.card-container3 {
  display: inline-block;
  position: relative;
}

.card-container3:hover .card-inner3 {
  transition: transform 0.1s;
}

.card-container3:hover .card-inner3 {
  transform: perspective(1000px) rotateY(var(--rotateY)) rotateX(var(--rotateX));
}

.card-container3:hover {
  --rotateY: calc((100% - (var(--mouseX))) / 10);
  --rotateX: calc((100% - (var(--mouseY))) / 10);
}

/* Use JS to capture mouse positions */
